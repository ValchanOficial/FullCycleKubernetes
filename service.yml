apiVersion: v1
kind: Service
metadata:
  name: projectserver-service
spec:
  selector:
    app: projectserver # Filtra os pods do deployment que serão incluídos no serviço
  type: ClusterIP # Tipo de serviço, tipos disponíveis: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  ports:
  - name: projectserver-service
    protocol: TCP
    port: 80 # Porta do serviço
    targetPort: 8000 # Porta do container que será exposta pelo serviço, por default é a mesma que porta do serviço

# kubectl apply -f service.yml
# kubectl get services ou kubectl get svc
# kubectl port-forward svc/projectserver-service 8080:80
# proxy: kubeclt proxy --port=8080 # http://localhost:8080/api/v1/namespaces/default/services/projectserver-service/

####  NodePort
# apiVersion: v1
# kind: Service
# metadata:
#   name: projectserver-service
# spec:
#   type: NodePort
#   selector:
#     app: projectserver
#   ports:
#       # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
#     - port: 80
#       targetPort: 8000
#       # Optional field
#       # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
#       nodePort: 30007

#### LoadBalancer
# apiVersion: v1
# kind: Service
# metadata:
#   name: projectserver-service
# spec:
#   selector:
#     app: projectserver
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 9376
#   clusterIP: 10.0.171.239
#   type: LoadBalancer
# status:
#   loadBalancer:
#     ingress:
#     - ip: 192.0.2.127